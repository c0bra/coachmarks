{"version":3,"file":"coachmarks.min.js","sources":["../src/cache.js","../src/draw.js","../node_modules/path-svg/svg-path.js","../src/index.js","../src/inject-svg.js"],"sourcesContent":["export default function cache(...args) {\n  return cache.addOrGet(...args);\n}\n\ncache.init = () => {\n  if (!cache.cache) {\n    cache.cache = {};\n  }\n};\n\ncache.addOrGet = (name, obj) => {\n  cache.init();\n  if (typeof obj === 'undefined') {\n    // Get\n    return cache.get(name);\n  }\n\n  // Set\n  cache.add(name, obj);\n\n  return obj;\n};\n\ncache.get = name => {\n  cache.init();\n  return cache.cache[name];\n};\n\ncache.add = (name, obj) => {\n  cache.init();\n  cache.cache[name] = obj;\n  return obj;\n};\ncache.set = cache.add;\n\ncache.remove = name => {\n  cache.init();\n  if (name) delete cache.cache[name];\n};\n\ncache.clear = () => {\n  cache.init();\n  for (const c of cache.cache) {\n    cache.cache[c] = undefined;\n  }\n};\n\ncache.default = (name, defaultFn) => {\n  const obj = cache(name);\n\n  if (obj === undefined) return cache(name, defaultFn.call());\n  return obj;\n};\n\ncache.all = () => {\n  cache.init();\n  return cache.cache;\n};\n\ncache.allArray = () => {\n  cache.init();\n  const elms = [];\n  for (const key in cache) {\n    if (Object.prototype.hasOwnProperty.call(cache.cache, key)) {\n      elms.push({ key: cache.cache[key] });\n    }\n  }\n\n  return elms;\n};\n","'use strict';\n\nimport distance from 'euclidean-distance';\nimport polar from 'array-polar';\nimport LeaderLine from 'leader-line';\nimport SvgPath from 'path-svg/svg-path';\nimport cache from './cache';\n\n// TODO: for positioning choose biggest delta between x and y, it will be one of two (i.e. bottom or left), so choose the one that's the largest delta from the other point's (maybe)\n\n// Spacing between line and node\nconst lineOffset = 20;\nconst elmNames = ['text', 'textContainer', 'coachTop', 'coachLeft', 'coachRight', 'coachBottom', 'glow', 'closeButton', 'svg', 'path'];\n\nexport function clear() {\n  hideAll();\n\n  elmNames.forEach(name => {\n    const node = cache(name);\n    if (node instanceof Node) {\n      node.remove();\n      cache.remove(name);\n    }\n  });\n}\n\nexport function redrawAll() {\n  Object.keys(cache.all()).forEach(key => {\n    const item = cache(key);\n    if (!(item instanceof Node)) {\n      if (item.showing) draw(key);\n    }\n  });\n}\n\nfunction hideAll() {\n  Object.values(cache.all()).forEach(val => {\n    if (val.showing) val.showing = false;\n  });\n}\n\nexport function draw(name) {\n  const mark = cache(name);\n  if (!mark) throw new Error(`Coachmark with name '${name}' not found`);\n  mark.showing = true;\n\n  const coached = coach(mark);\n  const text = addText(mark.text);\n\n  if (!coached.ownerDocument) return;\n  if (!text.ownerDocument) return;\n\n  if (coached.compareDocumentPosition(coached.ownerDocument) & Node.DOCUMENT_POSITION_DISCONNECTED) return;\n  if (text.compareDocumentPosition(text.ownerDocument) & Node.DOCUMENT_POSITION_DISCONNECTED) return;\n  if (coached.compareDocumentPosition(text) & Node.DOCUMENT_POSITION_DISCONNECTED) return;\n\n  // arrow(coached, text);\n  leaderLine(text, coached);\n}\n\nfunction coach(mark) {\n  if (!mark) throw new Error(`Coachmark with name '${name}' not found`);\n\n  const elm = cache.default('elm', () => document.querySelector(mark.target));\n\n  if (elm.className.indexOf('draggable-source') === -1) elm.className += ' draggable-source';\n\n  elm.style.position = 'absolute';\n  elm.style['z-index'] = 102;\n\n  const borderRadius = window.getComputedStyle(elm).getPropertyValue('border-radius');\n  // borderRadius = parseInt(borderRadius, 10);\n\n  const top = elm.offsetTop;\n  const left = elm.offsetLeft;\n  const width = elm.offsetWidth;\n  const height = elm.offsetHeight;\n  const right = left + width;\n  const bottom = top + height;\n\n  const coachTop = cache.default('coachTop', () => document.createElement('div'));\n  coachTop.className = 'coachmark-top';\n  const coachLeft = cache.default('coachLeft', () => document.createElement('div'));\n  coachLeft.className = 'coachmark-left';\n  const coachRight = cache.default('coachRight', () => document.createElement('div'));\n  coachRight.className = 'coachmark-right';\n  const coachBottom = cache.default('coachBottom', () => document.createElement('div'));\n  coachBottom.className = 'coachmark-bottom';\n\n  coachTop.style.height = top + 'px';\n  coachLeft.style.top = top + 'px';\n  coachRight.style.top = coachLeft.style.top;\n  coachLeft.style.height = height + 'px';\n  coachRight.style.height = coachLeft.style.height;\n  coachLeft.style.width = left + 'px';\n  coachRight.style.left = right + 'px';\n  coachBottom.style.top = bottom + 'px';\n\n  const glow = cache.default('glow', () => document.createElement('div'));\n\n  glow.className = 'coachmark-glow';\n  glow.style.top = (top) + 'px';\n  glow.style.left = (left) + 'px';\n  glow.style.width = (width) + 'px';\n  glow.style.height = (height) + 'px';\n  glow.style['border-radius'] = borderRadius;\n  glow.style['box-shadow'] = '0 0 ' + 20 + 'px ' + 10 + 'px #fff'; //  TODO: this style should probably be dynamic\n\n  const close = createCloseButton();\n\n  [coachTop, coachLeft, coachRight, coachBottom, glow, close].forEach(c => {\n    if (!c.parentNode) {\n      document.body.appendChild(c);\n    }\n  });\n\n  return elm;\n}\n\nexport function addText(textStr) {\n  const text = cache.default('text', () => document.createElement('div'));\n\n  const elm = cache('elm');\n  if (!elm) throw new Error('Could not get element from cache');\n\n  const [box1, box2] = splitScreen();\n\n  // See if the element is in box1 or box2;\n  let elmMiddle = middleOf(elm);\n  elmMiddle = { x: Math.floor(elmMiddle[0]), y: Math.floor(elmMiddle[1]) };\n\n  let box;\n  if (rectContains(elmMiddle, box1)) {\n    box = box2;\n  } else {\n    box = box1;\n  }\n\n  const textContainer = cache.default('textContainer', () => document.createElement('div'));\n  textContainer.className = 'coachmark-text-container';\n  textContainer.style.top = box.top;\n  textContainer.style.left = box.left;\n  textContainer.style.width = box.width;\n  textContainer.style.height = box.height;\n\n  textContainer.appendChild(text);\n  document.body.appendChild(textContainer);\n\n  text.className = 'coachmark-text draggable-source';\n  // const ref = (text.innerText || text.textContent);\n  text.textContent = textStr;\n\n  return text;\n}\n\nfunction leaderLine(from, to) {\n  let line = cache.get('leaderLine');\n  if (line) {\n    line.remove();\n  }\n\n  line = new LeaderLine(from, to);\n  cache.set('leaderLine', line);\n\n  // window.line = line;\n  line.path = 'fluid';\n  line.position();\n}\n\n// Draw arrow from one node to another\nfunction arrow(from, to) {\n  const fromRect = elementRect(from);\n  const toRect = elementRect(to);\n\n  // let fromPos = nearestEdgePoint(fromRect, toRect, { useCorners: false });\n  // let toPos = nearestEdgePoint(toRect, fromRect, { useCorners: false });\n  // fromPos = nearestEdgePoint(fromPos, toRect);\n  // toPos = nearestEdgePoint(toPos, fromRect);\n  const fromPos = arrowPoints(fromRect, toRect);\n  const toPos = arrowPoints(toRect, fromRect);\n\n  // NOTE: for curved line\n  const mid = midPoint(fromPos[0], fromPos[1], toPos[0], toPos[1]);\n  // let c1x = mid[0];\n  // let c1y = toPos[1];\n  // const c2x = fromPos[0];\n  // const c2y = mid[1];\n\n  // Find point, 50% of segment length away from midPoint\n  const dist = lineDist(fromPos[0], fromPos[1], toPos[0], toPos[1]);\n  // const vMid = viewportMid();\n  const coords = polar([fromPos[0], fromPos[1], toPos[0], toPos[1]], [fromPos[0], fromPos[1]]);\n  // const midCoords = polar([fromPos[0], fromPos[1], mid[0], mid[1]], [fromPos[0], fromPos[1]]);\n  const angle = coords[3];\n  let deg = angle * 180 / Math.PI;\n  deg = deg < 0 ? deg + 360 : deg;\n  const degPerp = deg - 90;\n  const degPerpRad = degPerp * Math.PI / 180;\n  const newCoords = polar.cartesian([0, Math.PI, dist * 0.2, degPerpRad]);\n  const midCtrl = [mid[0] + newCoords[2], mid[1] + newCoords[3]];\n\n  // const sl = slope(fromPos[0], fromPos[1], toPos[0], toPos[1]);\n  // const recip = -1 / sl;\n  // console.log('SLOPE', sl, recip);\n\n  // const pathStr = SvgPath().M(fromPos[0], fromPos[1]).C(c2x, c2y, c1x, c1y, toPos[0], toPos[1]).str();\n  // NOTE: quadratic curve using these args looks better. Also arrowhead orients right\n\n  // const pathStr = SvgPath().M(fromPos[0], fromPos[1]).Q(c1x, c1y, toPos[0], toPos[1]).str();\n\n  // NOTE: This is a nice smooth quadratic bezier curve\n  const pathStr = SvgPath().M(fromPos[0], fromPos[1]).Q(midCtrl[0], midCtrl[1], toPos[0], toPos[1]).str();\n\n  // const pathStr = SvgPath().M(fromPos[0], fromPos[1]).L(toPos[0], toPos[1]).str();\n\n  // Bezier S-Curve\n  // const dx = toPos[0] - fromPos[0];\n  // const dy = toPos[1] - fromPos[1];\n  // pathStr = SvgPath().M(fromPos[0], fromPos[1]).C(fromPos[0] + (dx * 0.33), fromPos[1], fromPos[0] + (dx * 0.67), toPos[1], toPos[0], toPos[1]).str();\n  // End Bezier S-Curve\n\n  const svg = cache.default('svg', () => createSVG());\n  const path = cache.default('path', () => document.createElementNS('http://www.w3.org/2000/svg', 'path'));\n\n  path.setAttribute('d', pathStr);\n  path.setAttribute('class', 'coachmark-line');\n  path.setAttribute('stroke-width', '5');\n  path.setAttribute('fill', 'none');\n  path.setAttribute('filter', 'url(#coachmark-chalk)');\n  path.setAttribute('marker-end', 'url(#arrow)');\n  // path.setAttribute('stroke-dasharray', '50, 15');\n  path.setAttribute('stroke-linecap', 'round');\n\n  if (!path.parentNode) {\n    svg.appendChild(path);\n  }\n\n  if (!svg.parentNode) {\n    document.body.insertBefore(svg, document.body.firstChild);\n  }\n}\n\nfunction createSVG() {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('height', '100%');\n  svg.setAttribute('width', '100%');\n  svg.setAttribute('class', 'coachmark-svg');\n  return svg;\n}\n\nfunction createCloseButton() {\n  const close = cache.default('closeButton', () => document.createElement('div'));\n  close.setAttribute('class', 'coachmark-close');\n  close.innerHTML = 'X';\n  close.addEventListener('click', () => clear());\n  return close;\n}\n\n/* Calculations Methods */\n\n// function dist(pt1, pt2) {\n//   return Math.sqrt(\n//     Math.pow(pt2[0] - pt1[0], 2)\n//     *\n//     Math.pow(pt2[1] - pt1[1], 2)\n//   );\n// }\n\nfunction arrowPoints(from, to, opts = {}) {\n  // From is a rect, calc line from middle of rectangle\n  // const fromPt = middleOf(from);\n  // const toPt = middleOf(to);\n\n  const nearestFrom = nearestEdgePoint(from, to);\n  const nearestTo = nearestEdgePoint(to, from);\n\n  const dx = nearestTo[0] - nearestFrom[0];\n  const dy = nearestTo[1] - nearestFrom[1];\n\n  opts.favor = (dx > dy) ? 'x' : 'y';\n\n  return nearestEdgePoint(nearestFrom, to, opts);\n}\n\nfunction nearestEdgePoint(from, toRect, { useCorners, favor } = {}) {\n  /*\n    rect: {\n      top, left, width, height\n    }\n  */\n\n  // From is a rect, calc line from middle of rectangle\n  if (Object.prototype.hasOwnProperty.call(from, 'top')) {\n    from = middleOf(from);\n  }\n\n  // NOTE: overall I think snapping to middle only actually looks a bit better, assuming that we calculated the edges properly\n  // Get list of point around toRect;\n  const points = {\n    leftTop: [toRect.left, toRect.top],\n    middleTop: [toRect.left + (toRect.width / 2), toRect.top],\n    rightTop: [toRect.left + toRect.width, toRect.top],\n    rightMiddle: [toRect.left + toRect.width, toRect.top + (toRect.height / 2)],\n    rightBottom: [toRect.left + toRect.width, toRect.top + toRect.height],\n    middleBottom: [toRect.left + (toRect.width / 2), toRect.top + toRect.height],\n    leftBottom: [toRect.left, toRect.top + toRect.height],\n    leftMiddle: [toRect.left, toRect.top + (toRect.height / 2)],\n  };\n\n  if (useCorners === false) {\n    Object.keys(points).forEach(key => {\n      if (key.toLowerCase().indexOf('middle') === -1) delete points[key];\n    });\n  }\n\n  if (favor && favor === 'x') {\n    // Remove top/bottom edges\n    Object.keys(points).forEach(key => {\n      if (/left|right/i.test(key)) delete points[key];\n    });\n  } else if (favor && favor === 'y') {\n    // Remove left/right edges\n    Object.keys(points).forEach(key => {\n      if (/top|bottom/i.test(key)) delete points[key];\n    });\n  }\n\n  let nearest = { point: [0, 0], dist: Infinity };\n  let nearestName = '';\n  Object.keys(points).forEach(key => {\n    const point = points[key];\n    const dist = distance(from, point);\n    if (dist < nearest.dist) {\n      nearest = { point, dist };\n      nearestName = key;\n    }\n  });\n\n  nearestName = nearestName.toLowerCase();\n  const point = nearest.point;\n\n  if (nearestName.indexOf('top') !== -1) point[1] -= lineOffset;\n  if (nearestName.indexOf('bottom') !== -1) point[1] += lineOffset;\n  if (nearestName.indexOf('left') !== -1) point[0] -= lineOffset;\n  if (nearestName.indexOf('right') !== -1) point[0] += lineOffset;\n\n  return point;\n}\n\nfunction middleOf(node) {\n  let rect = node;\n  if (node instanceof Node) {\n    rect = elementRect(node);\n  }\n\n  return [rect.left + (rect.width / 2), rect.top + (rect.height / 2)];\n}\n\nfunction rectContains({ x, y }, { left, top, width, height }) {\n  return left <= x && x <= left + width &&\n         top <= y && y <= top + height;\n}\n\nfunction splitScreen() {\n  const w = document.body.offsetWidth;\n  const h = document.body.offsetHeight;\n\n  let box1;\n  let box2;\n\n  // Split vertically\n  if (w > h) {\n    const boxWidth = Math.floor(w / 2);\n    box1 = {\n      top: 0,\n      left: 0,\n      height: h,\n      width: boxWidth,\n    };\n    box2 = {\n      top: 0,\n      left: boxWidth,\n      height: h,\n      width: w - boxWidth,\n    };\n  } else {\n    const boxHeight = Math.floor(h / 2);\n    box1 = {\n      top: 0,\n      left: 0,\n      height: boxHeight,\n      width: w,\n    };\n    box2 = {\n      top: boxHeight,\n      left: 0,\n      height: h - boxHeight,\n      width: w,\n    };\n  }\n\n  return [box1, box2];\n}\n\n/* NOTE: not in use currently\nfunction middleOfEdge(node, edge) {\n  const rect = elementRect(node);\n\n  const width = rect.width;\n  const height = rect.height;\n  const middleX = rect.width / 2;\n  const middleY = rect.height / 2;\n  let x = rect.left + middleX;\n  let y = rect.top + middleY;\n\n  switch (edge) {\n    case 'top':\n      x = rect.left + middleX;\n      y = rect.top - lineOffset;\n      break;\n    case 'right':\n      x = rect.left + width + lineOffset;\n      y = rect.top + middleY;\n      break;\n    case 'bottom':\n      x = rect.left + middleX;\n      y = rect.top + height + lineOffset;\n      break;\n    case 'left':\n      x = rect.left - lineOffset;\n      y = rect.top + middleY;\n      break;\n    default:\n      // do nothing\n  }\n\n  return [x, y];\n}\n*/\n\nfunction elementRect(node, offsetParent) {\n  if (offsetParent === true) offsetParent = node.offsetParent;\n\n  const rect = node.getBoundingClientRect();\n  const prect = offsetParent ?\n    offsetParent.getBoundingClientRect() :\n    { left: 0, top: 0 };\n\n  return {\n    left: rect.left - prect.left,\n    top: rect.top - prect.top,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\nfunction midPoint(x1, y1, x2, y2) {\n  return [(x1 + x2) / 2, (y1 + y2) / 2];\n}\n\nfunction lineDist(x1, y1, x2, y2) {\n  return Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n}\n\n// function slope(x1, y1, x2, y2) {\n//   return (y2 - y1) / (x2 - x1);\n// }\n\nfunction viewportMid() {\n  return [\n    Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n    Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2,\n  ];\n}\n\n// function dirToViewportMid(pos) {\n//   const mid = viewportMid();\n//   return [\n//     pos[0] > mid[0] ? -1 : 1,\n//     pos[1] > mid[1] ? -1 : 1,\n//   ];\n// }\n\n/* NOTE: not in use currently\nfunction intersectionEdge(point, rect) {\n  const slope = (rect.top - point.y) / (rect.left - point.x);\n  const hsw = slope * rect.width / 2;\n  const hsh = (rect.height / 2) / slope;\n  const hh = rect.height / 2;\n  const hw = rect.width / 2;\n  // const TOPLEFT = {x: rect.x - hw, y: rect.y + hh};\n  // const BOTTOMLEFT = {x: rect.x - hw, y: rect.y - hh};\n  // const BOTTOMRIGHT = {x: rect.x + hw, y: rect.y - hh};\n  // const TOPRIGHT = {x: rect.x + hw, y: rect.y + hh};\n  if (-hh <= hsw && hsw <= hh) {\n      // line intersects\n    if (rect.left >= point.x) {\n          // right edge;\n      return 'right'; // [TOPRIGHT, BOTTOMRIGHT];\n    } else if (rect.left < point.x) {\n          // left edge\n      return 'left'; // [TOPLEFT, BOTTOMLEFT];\n    }\n  }\n  if (-hw <= hsh && hsh <= hw) {\n    if (rect.top < point.y) {\n          // top edge\n      return 'top'; // [TOPLEFT, TOPRIGHT];\n    } else if (rect.top > point.y) {\n          // bottom edge\n      return 'bottom'; // [BOTTOMLEFT, BOTTOMRIGHT];\n    }\n  }\n}\n*/\n","/**\n * SvgPath\n * Chainable SVG path string generator with some sugar added\n * Supports Node, AMD and browser environments (EcmaScript 5+ or shims)\n * No dependencies\n * @version 0.2.1\n * @author Igor Zalutsky\n * @license MIT\n */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.SvgPath = factory();\n    }\n}(this, function () {\n    \"use strict\";\n\n    var absCommands = ['M', 'Z', 'L', 'H', 'V', 'C', 'S', 'Q', 'T', 'A'];\n    var relCommands = absCommands.map(function(letter){\n        return letter.toLowerCase();\n    });\n    var commands = absCommands.concat(relCommands);\n\n    /**\n     * Creates a path builder. Can be invoked without new.\n     * @returns {SvgPath}\n     * @constructor\n     */\n    function SvgPath(){\n        //TODO is this check robust enough?\n        if (this instanceof SvgPath){\n            this.relative = false;\n            this.commands = [];\n        } else {\n            return new SvgPath();\n        }\n    }\n\n    /**\n     * Turns relative mode on (lowercase commands will be used)\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.rel = function(){\n        this.relative = true;\n        return this;\n    };\n\n    /**\n     * Turns relative mode off (uppercase commands will be used)\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.abs = function(){\n        this.relative = false;\n        return this;\n    };\n\n    /**\n     * Closes subpath (Z command)\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.close = function(){\n        return this.Z();\n    };\n\n    /**\n     * Moves pen (M or m command)\n     * Also accepts point, i.e. { x: 10, y: 20 }\n     * @param x\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.to = function(x, y){\n        var point = (typeof x === 'object') ? x : { x: x, y: y };\n        return this._cmd('M')(point.x, point.y);\n    };\n\n    /**\n     * Draws line (L or l command)\n     * Also accepts point, i.e. { x: 10, y: 20 }\n     * @param x\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.line = function(x, y){\n        var point = (typeof x === 'object') ? x : { x: x, y: y };\n        return this._cmd('L')(point.x, point.y);\n    };\n\n    /**\n     * Draws horizontal line (H or h command)\n     * @param x\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.hline = function(x){\n        return this._cmd('H')(x);\n    };\n\n    /**\n     * Draws vertical line (V or v command)\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.vline = function(y){\n        return this._cmd('V')(y);\n    };\n\n    /**\n     * Draws cubic bezier curve (C or c command)\n     * Also accepts 2 or 3 points, i.e. { x: 10, y: 20 }\n     * If last point is omitted, acts like shortcut (S or s command)\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     * @param x\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.bezier3 = function(x1, y1, x2, y2, x, y){\n        var usePoints = (typeof x1 === 'object');\n        var shortcut = usePoints ? arguments.length < 3 : arguments.length < 6;\n        var p1 = { x: x1, y: y1 };\n        var p2 = { x: x2, y: y2 };\n        var end = shortcut ? p2 : { x: x, y: y };\n        if (usePoints){\n            p1 = x1;\n            p2 = y1;\n            end = shortcut ? p2 : x2;\n        }\n        if (!shortcut) {\n            return this._cmd('C')(p1.x, p1.y, p2.x, p2.y, end.x, end.y);\n        } else {\n            return this._cmd('S')(p1.x, p1.y, end.x, end.y);\n        }\n    };\n\n    /**\n     * Draws quadratic bezier curve (Q or q command)\n     * Also accepts 1 or 2 points, i.e. { x: 10, y: 20 }\n     * If last point is omitted, acts like shortcut (T or t command)\n     * @param x1\n     * @param y1\n     * @param x\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.bezier2 = function(x1, y1, x, y){\n        var usePoints = (typeof x1 === 'object');\n        var shortcut = usePoints ? arguments.length < 2 : arguments.length < 4;\n        var p1 = { x: x1, y: y1 };\n        var end = shortcut ? p1 : { x: x, y: y };\n        if (usePoints){\n            p1 = x1;\n            end = shortcut ? p1 : y1;\n        }\n        if (!shortcut) {\n            return this._cmd('Q')(p1.x, p1.y, end.x, end.y);\n        } else {\n            return this._cmd('T')(end.x, end.y);\n        }\n    };\n\n    /**\n     * Draws an arc (A or a command)\n     * Also accepts end point, i.e. { x: 10, y: 20 }\n     * @param rx\n     * @param ry\n     * @param rotation\n     * @param large\n     * @param sweep\n     * @param x\n     * @param y\n     * @returns {*}\n     */\n    SvgPath.prototype.arc = function(rx, ry, rotation, large, sweep, x, y){\n        var point = (typeof x === 'object') ? x : { x: x, y: y };\n        return this._cmd('A')(rx, ry, rotation, large, sweep, point.x, point.y);\n    };\n\n    /**\n     * String representation of command chain\n     * @returns {string}\n     */\n    SvgPath.prototype.str = function(){\n        return this.commands.map(function(command){\n            return command.toString();\n        }).join(' ');\n    };\n\n    //setting letter commands\n    commands.forEach(function(commandName){\n        SvgPath.prototype[commandName] = function(){\n            var args = Array.prototype.slice.call(arguments, 0);\n            args.unshift(commandName);\n            var command = new Command(args);\n            this.commands.push(command);\n            return this;\n        };\n    });\n\n    /**\n     * Gets either absolute (uppercase) or relative (lowercase) version of command depending on mode\n     * @param letter\n     * @returns {function}\n     * @private\n     */\n    SvgPath.prototype._cmd = function(letter){\n        var actualName = this.relative ?\n            letter.toLowerCase() : letter.toUpperCase();\n        //TODO maybe direct invokation is better than binding?\n        return this[actualName].bind(this);\n    };\n\n    /**\n     * Represents a single command\n     * @param name\n     * @constructor\n     */\n    function Command(name){\n        //TODO more robust array detection\n        var args = name.length > 0 && name.slice ?\n            name : Array.prototype.slice.call(arguments, 0);\n        this.name = args[0];\n        this.args = args.slice(1);\n    }\n\n    /**\n     * String representation of a command\n     * @returns {string}\n     */\n    Command.prototype.toString = function(){\n        return this.name + ' ' + this.args.join(' ');\n    };\n\n    return SvgPath;\n\n}));\n","import cache from './cache';\nimport { clear, draw, redrawAll } from './draw';\n// import injectCSS from './inject-css';\nimport css from './css/main.scss'; /* eslint no-unused-vars: 0 */\nimport injectSVG from './inject-svg';\n\n// Run on module load\ninit();\n\nexport default {\n  // Add a coachmark\n  add(name, config = {}) {\n    if (!(typeof name === 'string')) {\n      config = name;\n      name = Math.random().toString(36).substr(2);\n    }\n\n    cache(name, config);\n  },\n  // Show a coachmark given a name\n  show(name) {\n    clear();\n    draw(name);\n  },\n  cache: () => cache.cache,\n  draw,\n  redrawAll,\n};\n\nfunction init() {\n  document.addEventListener('DOMContentLoaded', () => {\n    // injectCSS();\n    injectSVG();\n    addListeners();\n  });\n}\n\nfunction addListeners() {\n  window.addEventListener('resize', () => {\n    requestAnimationFrame(() => {\n      redrawAll();\n    });\n  });\n}\n","import svg from './html/svg-defs.svg';\n\nexport default function injectSVG() {\n  const s = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  s.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  s.setAttribute('width', 0);\n  s.setAttribute('height', 0);\n  s.innerHTML = svg;\n  document.body.insertBefore(s, document.body.firstChild);\n  return s;\n}\n"],"names":["cache","args","addOrGet","clear","Object","values","all","forEach","val","showing","elmNames","name","node","Node","remove","redrawAll","keys","key","item","draw","mark","Error","coached","elm","default","document","querySelector","target","className","indexOf","style","position","borderRadius","window","getComputedStyle","getPropertyValue","top","offsetTop","left","offsetLeft","width","offsetWidth","height","offsetHeight","right","bottom","coachTop","createElement","coachLeft","coachRight","coachBottom","glow","close","setAttribute","innerHTML","addEventListener","createCloseButton","c","parentNode","body","appendChild","coach","text","textStr","box1","box2","w","h","boxWidth","Math","floor","boxHeight","splitScreen","box","elmMiddle","rect","offsetParent","getBoundingClientRect","prect","elementRect","middleOf","x","y","rectContains","textContainer","textContent","addText","ownerDocument","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","from","to","line","get","LeaderLine","set","path","leaderLine","init","obj","add","undefined","defaultFn","call","allArray","elms","prototype","hasOwnProperty","push","root","factory","module","this","SvgPath","relative","commands","Command","length","slice","Array","arguments","absCommands","relCommands","map","letter","toLowerCase","concat","rel","abs","Z","point","_cmd","hline","vline","bezier3","x1","y1","x2","y2","usePoints","shortcut","p1","p2","end","bezier2","arc","rx","ry","rotation","large","sweep","str","command","toString","join","commandName","unshift","toUpperCase","bind","s","createElementNS","svg","insertBefore","firstChild","injectSVG","requestAnimationFrame","[object Object]","config","random","substr"],"mappings":"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"}