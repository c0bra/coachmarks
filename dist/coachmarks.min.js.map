{"version":3,"file":"coachmarks.min.js","sources":["../src/cache.js","../src/draw.js","../node_modules/euclidean-distance/squared.js","../node_modules/euclidean-distance/index.js","../node_modules/path-svg/svg-path.js","../src/index.js","../src/inject-svg.js"],"sourcesContent":["export default function cache(...args) {\n  return cache.addOrGet(...args);\n}\n\ncache.init = () => {\n  if (!cache.cache) {\n    cache.cache = {};\n  }\n};\n\ncache.addOrGet = (name, obj) => {\n  cache.init();\n  if (typeof obj === 'undefined') {\n    // Get\n    return cache.get(name);\n  }\n\n  // Set\n  cache.add(name, obj);\n\n  return obj;\n};\n\ncache.get = name => {\n  cache.init();\n  return cache.cache[name];\n};\n\ncache.add = (name, obj) => {\n  cache.init();\n  cache.cache[name] = obj;\n  return obj;\n};\n\ncache.remove = name => {\n  cache.init();\n  if (name) cache.cache[name] = undefined;\n};\n\ncache.clear = () => {\n  cache.init();\n  for (const c of cache.cache) {\n    cache.cache[c] = undefined;\n  }\n};\n\ncache.default = (name, defaultFn) => {\n  const obj = cache(name);\n\n  if (obj === undefined) return cache(name, defaultFn.call());\n  return obj;\n};\n\ncache.all = () => {\n  cache.init();\n  return cache.cache;\n};\n\ncache.allArray = () => {\n  cache.init();\n  const elms = [];\n  for (const key in cache) {\n    if (Object.prototype.hasOwnProperty.call(cache.cache, key)) {\n      elms.push({ key: cache.cache[key] });\n    }\n  }\n\n  return elms;\n};\n","'use strict';\n\nimport distance from 'euclidean-distance';\nimport SvgPath from 'path-svg/svg-path';\nimport cache from './cache';\n\n// TODO: for positioning choose biggest delta between x and y, it will be one of two (i.e. bottom or left), so choose the one that's the largest delta from the other point's (maybe)\n\n// Spacing between line and node\nconst lineOffset = 20;\nconst elmNames = ['text', 'coachTop', 'coachLeft', 'coachRight', 'coachBottom', 'glow', 'closeButton', 'svg', 'path'];\n\nexport function clear() {\n  // debugger;\n  elmNames.forEach(name => {\n    const node = cache(name);\n    if (node instanceof Node) {\n      node.remove();\n      cache.remove(name);\n    }\n  });\n}\n\nexport function redrawAll() {\n  const all = cache.all();\n\n  Object.keys(all).forEach(key => {\n    const item = cache(key);\n    if (!(item instanceof Node)) {\n      draw(key);\n    }\n  });\n}\n\nexport function draw(name) {\n  const mark = cache(name);\n  if (!mark) throw new Error(`Coachmark with name '${name}' not found`);\n\n  const coached = coach(mark);\n  const text = addText(mark.text);\n  arrow(coached, text);\n}\n\nfunction coach(mark) {\n  if (!mark) throw new Error(`Coachmark with name '${name}' not found`);\n\n  const elm = cache.default('elm', () => document.querySelector(mark.target));\n\n  if (elm.className.indexOf('draggable-source') === -1) elm.className += ' draggable-source';\n\n  elm.style.position = 'absolute';\n  elm.style['z-index'] = 102;\n\n  const borderRadius = window.getComputedStyle(elm).getPropertyValue('border-radius');\n  // borderRadius = parseInt(borderRadius, 10);\n\n  const top = elm.offsetTop;\n  const left = elm.offsetLeft;\n  const width = elm.offsetWidth;\n  const height = elm.offsetHeight;\n  const right = left + width;\n  const bottom = top + height;\n\n  const coachTop = cache.default('coachTop', () => document.createElement('div'));\n  coachTop.className = 'coachmark-top';\n  const coachLeft = cache.default('coachLeft', () => document.createElement('div'));\n  coachLeft.className = 'coachmark-left';\n  const coachRight = cache.default('coachRight', () => document.createElement('div'));\n  coachRight.className = 'coachmark-right';\n  const coachBottom = cache.default('coachBottom', () => document.createElement('div'));\n  coachBottom.className = 'coachmark-bottom';\n\n  coachTop.style.height = top + 'px';\n  coachLeft.style.top = top + 'px';\n  coachRight.style.top = coachLeft.style.top;\n  coachLeft.style.height = height + 'px';\n  coachRight.style.height = coachLeft.style.height;\n  coachLeft.style.width = left + 'px';\n  coachRight.style.left = right + 'px';\n  coachBottom.style.top = bottom + 'px';\n\n  const glow = cache.default('glow', () => document.createElement('div'));\n\n  glow.className = 'coachmark-glow';\n  glow.style.top = (top) + 'px';\n  glow.style.left = (left) + 'px';\n  glow.style.width = (width) + 'px';\n  glow.style.height = (height) + 'px';\n  glow.style['border-radius'] = borderRadius;\n  glow.style['box-shadow'] = '0 0 ' + 20 + 'px ' + 10 + 'px #fff'; //  TODO: this style should probably be dynamic\n\n  const close = createCloseButton();\n\n  [coachTop, coachLeft, coachRight, coachBottom, glow, close].forEach(c => {\n    if (!c.parentNode) {\n      document.body.appendChild(c);\n    }\n  });\n\n  return elm;\n}\n\nexport function addText(textStr) {\n  const text = cache.default('text', () => {\n    const text = document.createElement('div');\n    document.body.appendChild(text);\n    return text;\n  });\n\n  text.className = 'coachmark-text draggable-source';\n  // const ref = (text.innerText || text.textContent);\n  text.textContent = textStr;\n\n  return text;\n}\n\n// Draw arrow from one node to another\nfunction arrow(from, to) {\n  const fromRect = elementRect(from);\n  const toRect = elementRect(to);\n\n  let fromPos = nearestEdgePoint(fromRect, toRect);\n  let toPos = nearestEdgePoint(toRect, fromRect);\n  fromPos = nearestEdgePoint(fromPos, toRect);\n  toPos = nearestEdgePoint(toPos, fromRect);\n\n  /* NOTE: for curved linbe\n  // const mid = midPoint(fromPos[0], fromPos[1], toPos[0], toPos[1]);\n  // const c1x = mid[0];\n  // const c1y = toPos[1];\n  // const c2x = fromPos[0];\n  // const c2y = mid[1];\n  // const pathStr = SvgPath().M(fromPos[0], fromPos[1]).C(c2x, c2y, c1x, c1y, toPos[0], toPos[1]).str();\n  // NOTE: quadratic curve using these args looks better. Also arrowhead orients right\n  // const pathStr = SvgPath().M(fromPos[0], fromPos[1]).Q(c2x, c2y, toPos[0], toPos[1]).str();\n  */\n\n  const pathStr = SvgPath().M(fromPos[0], fromPos[1]).L(toPos[0], toPos[1]).str();\n\n  const svg = cache.default('svg', () => createSVG());\n  const path = cache.default('path', () => document.createElementNS('http://www.w3.org/2000/svg', 'path'));\n\n  path.setAttribute('d', pathStr);\n  path.setAttribute('class', 'coachmark-line');\n  path.setAttribute('stroke-width', '5');\n  path.setAttribute('fill', 'none');\n  path.setAttribute('filter', 'url(#coachmark-chalk)');\n  path.setAttribute('marker-end', 'url(#arrow)');\n\n  if (!path.parentNode) {\n    svg.appendChild(path);\n  }\n\n  if (!svg.parentNode) {\n    document.body.insertBefore(svg, document.body.firstChild);\n  }\n}\n\nfunction createSVG() {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('height', '100%');\n  svg.setAttribute('width', '100%');\n  svg.setAttribute('class', 'coachmark-svg');\n  return svg;\n}\n\nfunction createCloseButton() {\n  const close = cache.default('closeButton', () => document.createElement('div'));\n  close.setAttribute('class', 'coachmark-close');\n  close.innerHTML = 'X';\n  close.addEventListener('click', () => clear());\n  return close;\n}\n\n/* Calculations Methods */\n\n// function dist(pt1, pt2) {\n//   return Math.sqrt(\n//     Math.pow(pt2[0] - pt1[0], 2)\n//     *\n//     Math.pow(pt2[1] - pt1[1], 2)\n//   );\n// }\n\nfunction nearestEdgePoint(from, toRect) {\n  /*\n    rect: {\n      top, left, width, height\n    }\n  */\n\n  // From is a rect, calc line from middle of rectangle\n  if (Object.prototype.hasOwnProperty.call(from, 'top')) {\n    from = middleOf(from);\n  }\n\n  // NOTE: overall I think snapping to middle only actually looks a bit better, assuming that we calculated the edges properly\n  // Get list of point around toRect;\n  const points = {\n    leftTop: [toRect.left, toRect.top],\n    middleTop: [toRect.left + (toRect.width / 2), toRect.top],\n    rightTop: [toRect.left + toRect.width, toRect.top],\n    rightMiddle: [toRect.left + toRect.width, toRect.top + (toRect.height / 2)],\n    rightBottom: [toRect.left + toRect.width, toRect.top + toRect.height],\n    middleBottom: [toRect.left + (toRect.width / 2), toRect.top + toRect.height],\n    leftBottom: [toRect.left, toRect.top + toRect.height],\n    leftMiddle: [toRect.left, toRect.top + (toRect.height / 2)],\n  };\n\n  let nearest = { point: [0, 0], dist: Infinity };\n  let nearestName = '';\n  Object.keys(points).forEach(key => {\n    const point = points[key];\n    const dist = distance(from, point);\n    if (dist < nearest.dist) {\n      nearest = { point, dist };\n      nearestName = key;\n    }\n  });\n\n  nearestName = nearestName.toLowerCase();\n  const point = nearest.point;\n\n  if (nearestName.indexOf('top') !== -1) point[1] -= lineOffset;\n  if (nearestName.indexOf('bottom') !== -1) point[1] += lineOffset;\n  if (nearestName.indexOf('left') !== -1) point[0] -= lineOffset;\n  if (nearestName.indexOf('right') !== -1) point[0] += lineOffset;\n\n  return point;\n}\n\nfunction middleOf(node) {\n  let rect = node;\n  if (node instanceof Node) {\n    rect = elementRect(node);\n  }\n\n  return [rect.left + (rect.width / 2), rect.top + (rect.height / 2)];\n}\n\n/* NOTE: not in use currently\nfunction middleOfEdge(node, edge) {\n  const rect = elementRect(node);\n\n  const width = rect.width;\n  const height = rect.height;\n  const middleX = rect.width / 2;\n  const middleY = rect.height / 2;\n  let x = rect.left + middleX;\n  let y = rect.top + middleY;\n\n  switch (edge) {\n    case 'top':\n      x = rect.left + middleX;\n      y = rect.top - lineOffset;\n      break;\n    case 'right':\n      x = rect.left + width + lineOffset;\n      y = rect.top + middleY;\n      break;\n    case 'bottom':\n      x = rect.left + middleX;\n      y = rect.top + height + lineOffset;\n      break;\n    case 'left':\n      x = rect.left - lineOffset;\n      y = rect.top + middleY;\n      break;\n    default:\n      // do nothing\n  }\n\n  return [x, y];\n}\n*/\n\nfunction elementRect(node, offsetParent) {\n  if (offsetParent === true) offsetParent = node.offsetParent;\n\n  const rect = node.getBoundingClientRect();\n  const prect = offsetParent ?\n    offsetParent.getBoundingClientRect() :\n    { left: 0, top: 0 };\n\n  return {\n    left: rect.left - prect.left,\n    top: rect.top - prect.top,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n\n/* NOTE: not in use currently\nfunction midPoint(x1, y1, x2, y2) {\n  return [(x1 + x2) / 2, (y1 + y2) / 2];\n}\n*/\n\n// function lineDist(x1, y1, x2, y2) {\n//   return Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n// }\n//\n// function slope(x1, y1, x2, y2) {\n//   return (y2 - y1) / (x2 - x1);\n// }\n//\n// function viewportMid() {\n//   return [\n//     Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n//     Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2,\n//   ];\n// }\n\n// function dirToViewportMid(pos) {\n//   const mid = viewportMid();\n//   return [\n//     pos[0] > mid[0] ? -1 : 1,\n//     pos[1] > mid[1] ? -1 : 1,\n//   ];\n// }\n\n/* NOTE: not in use currently\nfunction intersectionEdge(point, rect) {\n  const slope = (rect.top - point.y) / (rect.left - point.x);\n  const hsw = slope * rect.width / 2;\n  const hsh = (rect.height / 2) / slope;\n  const hh = rect.height / 2;\n  const hw = rect.width / 2;\n  // const TOPLEFT = {x: rect.x - hw, y: rect.y + hh};\n  // const BOTTOMLEFT = {x: rect.x - hw, y: rect.y - hh};\n  // const BOTTOMRIGHT = {x: rect.x + hw, y: rect.y - hh};\n  // const TOPRIGHT = {x: rect.x + hw, y: rect.y + hh};\n  if (-hh <= hsw && hsw <= hh) {\n      // line intersects\n    if (rect.left >= point.x) {\n          // right edge;\n      return 'right'; // [TOPRIGHT, BOTTOMRIGHT];\n    } else if (rect.left < point.x) {\n          // left edge\n      return 'left'; // [TOPLEFT, BOTTOMLEFT];\n    }\n  }\n  if (-hw <= hsh && hsh <= hw) {\n    if (rect.top < point.y) {\n          // top edge\n      return 'top'; // [TOPLEFT, TOPRIGHT];\n    } else if (rect.top > point.y) {\n          // bottom edge\n      return 'bottom'; // [BOTTOMLEFT, BOTTOMRIGHT];\n    }\n  }\n}\n*/\n","module.exports = function (a, b) {\n  var sum = 0\n  var n\n  for (n = 0; n < a.length; n++) {\n    sum += Math.pow(a[n] - b[n], 2)\n  }\n  return sum\n}\n","// http://en.wikipedia.org/wiki/Euclidean_distance#Three_dimensions\n\nvar distanceSquared = require('./squared')\n\nmodule.exports = function (a, b) {\n  return Math.sqrt(distanceSquared(a,b))\n}\n","/**\n * SvgPath\n * Chainable SVG path string generator with some sugar added\n * Supports Node, AMD and browser environments (EcmaScript 5+ or shims)\n * No dependencies\n * @version 0.2.1\n * @author Igor Zalutsky\n * @license MIT\n */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.SvgPath = factory();\n    }\n}(this, function () {\n    \"use strict\";\n\n    var absCommands = ['M', 'Z', 'L', 'H', 'V', 'C', 'S', 'Q', 'T', 'A'];\n    var relCommands = absCommands.map(function(letter){\n        return letter.toLowerCase();\n    });\n    var commands = absCommands.concat(relCommands);\n\n    /**\n     * Creates a path builder. Can be invoked without new.\n     * @returns {SvgPath}\n     * @constructor\n     */\n    function SvgPath(){\n        //TODO is this check robust enough?\n        if (this instanceof SvgPath){\n            this.relative = false;\n            this.commands = [];\n        } else {\n            return new SvgPath();\n        }\n    }\n\n    /**\n     * Turns relative mode on (lowercase commands will be used)\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.rel = function(){\n        this.relative = true;\n        return this;\n    };\n\n    /**\n     * Turns relative mode off (uppercase commands will be used)\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.abs = function(){\n        this.relative = false;\n        return this;\n    };\n\n    /**\n     * Closes subpath (Z command)\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.close = function(){\n        return this.Z();\n    };\n\n    /**\n     * Moves pen (M or m command)\n     * Also accepts point, i.e. { x: 10, y: 20 }\n     * @param x\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.to = function(x, y){\n        var point = (typeof x === 'object') ? x : { x: x, y: y };\n        return this._cmd('M')(point.x, point.y);\n    };\n\n    /**\n     * Draws line (L or l command)\n     * Also accepts point, i.e. { x: 10, y: 20 }\n     * @param x\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.line = function(x, y){\n        var point = (typeof x === 'object') ? x : { x: x, y: y };\n        return this._cmd('L')(point.x, point.y);\n    };\n\n    /**\n     * Draws horizontal line (H or h command)\n     * @param x\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.hline = function(x){\n        return this._cmd('H')(x);\n    };\n\n    /**\n     * Draws vertical line (V or v command)\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.vline = function(y){\n        return this._cmd('V')(y);\n    };\n\n    /**\n     * Draws cubic bezier curve (C or c command)\n     * Also accepts 2 or 3 points, i.e. { x: 10, y: 20 }\n     * If last point is omitted, acts like shortcut (S or s command)\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     * @param x\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.bezier3 = function(x1, y1, x2, y2, x, y){\n        var usePoints = (typeof x1 === 'object');\n        var shortcut = usePoints ? arguments.length < 3 : arguments.length < 6;\n        var p1 = { x: x1, y: y1 };\n        var p2 = { x: x2, y: y2 };\n        var end = shortcut ? p2 : { x: x, y: y };\n        if (usePoints){\n            p1 = x1;\n            p2 = y1;\n            end = shortcut ? p2 : x2;\n        }\n        if (!shortcut) {\n            return this._cmd('C')(p1.x, p1.y, p2.x, p2.y, end.x, end.y);\n        } else {\n            return this._cmd('S')(p1.x, p1.y, end.x, end.y);\n        }\n    };\n\n    /**\n     * Draws quadratic bezier curve (Q or q command)\n     * Also accepts 1 or 2 points, i.e. { x: 10, y: 20 }\n     * If last point is omitted, acts like shortcut (T or t command)\n     * @param x1\n     * @param y1\n     * @param x\n     * @param y\n     * @returns {SvgPath}\n     */\n    SvgPath.prototype.bezier2 = function(x1, y1, x, y){\n        var usePoints = (typeof x1 === 'object');\n        var shortcut = usePoints ? arguments.length < 2 : arguments.length < 4;\n        var p1 = { x: x1, y: y1 };\n        var end = shortcut ? p1 : { x: x, y: y };\n        if (usePoints){\n            p1 = x1;\n            end = shortcut ? p1 : y1;\n        }\n        if (!shortcut) {\n            return this._cmd('Q')(p1.x, p1.y, end.x, end.y);\n        } else {\n            return this._cmd('T')(end.x, end.y);\n        }\n    };\n\n    /**\n     * Draws an arc (A or a command)\n     * Also accepts end point, i.e. { x: 10, y: 20 }\n     * @param rx\n     * @param ry\n     * @param rotation\n     * @param large\n     * @param sweep\n     * @param x\n     * @param y\n     * @returns {*}\n     */\n    SvgPath.prototype.arc = function(rx, ry, rotation, large, sweep, x, y){\n        var point = (typeof x === 'object') ? x : { x: x, y: y };\n        return this._cmd('A')(rx, ry, rotation, large, sweep, point.x, point.y);\n    };\n\n    /**\n     * String representation of command chain\n     * @returns {string}\n     */\n    SvgPath.prototype.str = function(){\n        return this.commands.map(function(command){\n            return command.toString();\n        }).join(' ');\n    };\n\n    //setting letter commands\n    commands.forEach(function(commandName){\n        SvgPath.prototype[commandName] = function(){\n            var args = Array.prototype.slice.call(arguments, 0);\n            args.unshift(commandName);\n            var command = new Command(args);\n            this.commands.push(command);\n            return this;\n        };\n    });\n\n    /**\n     * Gets either absolute (uppercase) or relative (lowercase) version of command depending on mode\n     * @param letter\n     * @returns {function}\n     * @private\n     */\n    SvgPath.prototype._cmd = function(letter){\n        var actualName = this.relative ?\n            letter.toLowerCase() : letter.toUpperCase();\n        //TODO maybe direct invokation is better than binding?\n        return this[actualName].bind(this);\n    };\n\n    /**\n     * Represents a single command\n     * @param name\n     * @constructor\n     */\n    function Command(name){\n        //TODO more robust array detection\n        var args = name.length > 0 && name.slice ?\n            name : Array.prototype.slice.call(arguments, 0);\n        this.name = args[0];\n        this.args = args.slice(1);\n    }\n\n    /**\n     * String representation of a command\n     * @returns {string}\n     */\n    Command.prototype.toString = function(){\n        return this.name + ' ' + this.args.join(' ');\n    };\n\n    return SvgPath;\n\n}));\n","import cache from './cache';\nimport { clear, draw, redrawAll } from './draw';\n// import injectCSS from './inject-css';\nimport css from './css/main.scss'; /* eslint no-unused-vars: 0 */\nimport injectSVG from './inject-svg';\n\n// Run on module load\ninit();\n\nexport default {\n  // Add a coachmark\n  add(name, config = {}) {\n    if (!(typeof name === 'string')) {\n      config = name;\n      name = Math.random().toString(36).substr(2);\n    }\n\n    cache(name, config);\n  },\n  // Show a coachmark given a name\n  show(name) {\n    clear();\n    draw(name);\n  },\n  cache: () => cache.cache,\n  draw,\n  redrawAll,\n};\n\nfunction init() {\n  document.addEventListener('DOMContentLoaded', () => {\n    // injectCSS();\n    injectSVG();\n    addListeners();\n  });\n}\n\nfunction addListeners() {\n  window.addEventListener('resize', () => {\n    requestAnimationFrame(() => {\n      redrawAll();\n    });\n  });\n}\n","import svg from './html/svg-defs.svg';\n\nexport default function injectSVG() {\n  const s = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  s.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  s.setAttribute('width', 0);\n  s.setAttribute('height', 0);\n  s.innerHTML = svg;\n  document.body.insertBefore(s, document.body.firstChild);\n  return s;\n}\n"],"names":["cache","args","addOrGet","clear","elmNames","forEach","name","node","Node","remove","redrawAll","all","Object","keys","key","draw","mark","Error","from","to","fromRect","elementRect","toRect","fromPos","nearestEdgePoint","toPos","pathStr","SvgPath","M","L","str","svg","default","document","createElementNS","setAttribute","createSVG","path","parentNode","appendChild","body","insertBefore","firstChild","arrow","elm","querySelector","target","className","indexOf","style","position","borderRadius","window","getComputedStyle","getPropertyValue","top","offsetTop","left","offsetLeft","width","offsetWidth","height","offsetHeight","right","bottom","coachTop","createElement","coachLeft","coachRight","coachBottom","glow","close","innerHTML","addEventListener","createCloseButton","c","coach","textStr","text","textContent","addText","prototype","hasOwnProperty","call","rect","middleOf","points","leftTop","middleTop","rightTop","rightMiddle","rightBottom","middleBottom","leftBottom","leftMiddle","nearest","point","dist","Infinity","nearestName","distance","toLowerCase","lineOffset","offsetParent","getBoundingClientRect","prect","init","obj","get","add","undefined","defaultFn","allArray","elms","push","a","b","Math","sqrt","n","sum","length","pow","distanceSquared","root","factory","module","this","relative","commands","Command","slice","Array","arguments","absCommands","relCommands","map","letter","concat","rel","abs","Z","x","y","_cmd","line","hline","vline","bezier3","x1","y1","x2","y2","usePoints","shortcut","p1","p2","end","bezier2","arc","rx","ry","rotation","large","sweep","command","toString","join","commandName","unshift","toUpperCase","bind","s","injectSVG","requestAnimationFrame","[object Object]","config","random","substr"],"mappings":"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"}